# Required env vars:
# - DOCKER_REPO
# - DOCKER_USER (secure)
# - DOCKER_PASSWORD (secure)
# - SONARCLOUD_TOKEN (secure)
# - SONARCLOUD_ORG

dist: xenial
language: python
python:
  - "3.7"

services:
  - docker

cache: pip

stages:
  - name: Test
  - name: Test dev setups
  - name: Deploy
    if: type = push

jobs:
  include:
    # Test stage
    - stage: Test
      name: Validate Django project
      install: pip install -r requirements/base.txt
      script: manage/ci/validate-django.sh
    - stage: Test
      name: Run tests
      install: pip install -r requirements/testing.txt
      script: manage/ci/test.sh
    - stage: Test
      name: Run linter (flake8)
      install: pip install -r requirements/testing.txt
      script: flake8
      # SonarCloud does not fail the build if the SonarCloud quality gate fails,
      # but SonarCloud has a GitHub PR status check which can be made required.
    - stage: test
      name: Analyze source code (SonarCloud)
      language: java
      addons:
        sonarcloud:
          organization: $SONARCLOUD_ORG
          token: $SONARCLOUD_TOKEN
      git:
        depth: false
      install: true # NOP
      script: sonar-scanner

      # Test dev setup stage
    - stage: Test dev setups
      name: Validate venv dev setup
      install: true # NOP
      script: manage/setup.sh
    - stage: Test dev setups
      name: Validate Docker simple dev setup
      install: true # NOP
      script: manage/docker-simple/setup.sh
    - stage: Test dev setups
      name: Validate Docker full dev env
      install: true # NOP
      script: manage/docker-full/setup.sh

    # Deploy stage
    # TODO Release branch with version tag as commit message
    #- stage: Deploy
    #  name: Build and deploy stable to registry
    #  # Requires tag "vX.Y.Z" without suffix
    #  if: (tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$)
    #  install: true # NOP
    #  script: manage/ci-deploy-registry.sh stable $TRAVIS_TAG
    #- stage: Deploy
    #  name: Build and deploy bleeding to registry
    #  if: (branch = master)
    #  install: true # NOP
    #  script: manage/ci-deploy-registry.sh bleeding

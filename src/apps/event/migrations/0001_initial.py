# Generated by Django 2.2.2 on 2019-07-05 16:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': [('*', 'Event app admin'), ('event.*', 'Event admin'), ('event.create', 'Create events'), ('event.change', 'Change events'), ('event.delete', 'Delete events'), ('attendance.*', 'Arrival admin'), ('attendance.view', 'Show attendances'), ('attendance.create', 'Manually create attendances'), ('attendance.change', 'Manually change attendances'), ('attendance.delete', 'Manually delete attendances'), ('attendance.register_arrival', 'Register arrivals for attendances'), ('attendance.attend', 'Add attendances for one self'), ('attendance.unattend', 'Remove attendances for one self')],
                'managed': False,
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_time', models.DateTimeField(blank=True, help_text='When the user arrived at the event.', null=True, verbose_name='arrival time')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='title')),
                ('slug', models.SlugField(help_text='Short, unique text for this event, used in URLs and such. Changing this may break existing links.', max_length=20, unique=True, verbose_name='slug')),
                ('start_time', models.DateTimeField(verbose_name='start date and time')),
                ('end_time', models.DateTimeField(verbose_name='end date and time')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='location')),
                ('require_ticket', models.BooleanField(default=True, help_text='If a ticket with the grants-entrance flag is required to enter.', verbose_name='require ticket')),
                ('age_requirement', models.IntegerField(default=0, help_text='The lower age requirement for attending this event. 0 means no requirement.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='age requirement')),
                ('map_url', models.CharField(blank=True, help_text='URL for an embedded map.', max_length=300, verbose_name='map URL')),
                ('banner_url', models.CharField(blank=True, help_text='URL for the banner image.', max_length=300, verbose_name='banner URL')),
                ('description', models.TextField(verbose_name='description')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(check=models.Q(end_time__gt=django.db.models.expressions.F('start_time')), name='event_event_ends_after_start'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='event.Event', verbose_name='event'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['event', 'user'], name='event_atten_event_i_6bc200_idx'),
        ),
        migrations.AddConstraint(
            model_name='attendance',
            constraint=models.UniqueConstraint(fields=('event', 'user'), name='event_attendance_unique_event_user'),
        ),
    ]
